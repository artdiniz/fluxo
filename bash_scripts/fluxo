#!/usr/bin/env bash

_FLUXO_COMMAND="$(basename "$0}") $@"

_FLUXO_SCRIPT_SYMLINK_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

_FLUXO_SCRIPTS_DIR="$(
    _relative_symlinked_dir="$( dirname "$(readlink "$_FLUXO_SCRIPT_SYMLINK_DIR/fluxo")" )"
    cd "$_FLUXO_SCRIPT_SYMLINK_DIR" >/dev/null 2>&1
    cd "$_relative_symlinked_dir" >/dev/null 2>&1
    pwd
)"

_error_handling_current_command="$(basename "$0") $@"
. "$_FLUXO_SCRIPTS_DIR/_error_handling.sh"
. "$_FLUXO_SCRIPTS_DIR/_lib_run.sh"

FLUXO_HELP_MESSAGE="\
GIT-FLUXO

$(tput bold)USAGE$(tput sgr0)

  git fluxo <show | diff | rebase | doctor>
  git fluxo -- <-h|--help>

$(tput bold)ACTIONS$(tput sgr0)
  
  -h | --help      Show detailed instructions

$(tput bold)FLUXO COMMANDS$(tput sgr0)

  <show | s>           Show branches orderes by fluxo
  <diff | d>           Generate code diff files for each fluxo step
  <rebase | r>         Rebase after changing any fluxo previous steps
  <doctor | dr>        Check fluxo health (Are steps synchronized?)
"

function fluxo_print_usage {
    echo -ne "\n$FLUXO_HELP_MESSAGE\n"
}

navigate_to_git_repository_root

case "$1" in
-h|--help)
    fluxo_print_usage | less -RF
    exit $?
    ;;
show|s)
    shift
    . $(cd "$(dirname "$0")" && pwd)"/cmd_show_fluxo.sh"
    _lib_run show_fluxo "$@"
    ;;
drafts|dt)
    . $(cd "$(dirname "$0")" && pwd)"/cmd_show_fluxo.sh"
    shift
    _lib_run show_fluxo --drafts "$@"
    ;;
diff|d)
    shift
    . $(cd "$(dirname "$0")" && pwd)"/cmd_generate_fluxo_diff_files.sh"
    _lib_run generate_fluxo_diff_files "$@"
    ;;
rebase|r)
    shift
    . $(cd "$(dirname "$0")" && pwd)"/cmd_rebase_fluxo.sh"
    _lib_run rebase_fluxo "$@"
    ;;
doctor|dr)
    shift
    . $(cd "$(dirname "$0")" && pwd)"/cmd_fluxo_doctor.sh"
    _lib_run fluxo_doctor "$@"
    ;;
*)
    fluxo_print_usage
    exit 1
    ;;
esac
